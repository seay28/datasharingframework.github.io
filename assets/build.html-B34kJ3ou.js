import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,a as t,o as a}from"./app-CJIENTLq.js";const r={};function n(l,e){return a(),s("div",null,e[0]||(e[0]=[t(`<h2 id="build-project" tabindex="-1"><a class="header-anchor" href="#build-project"><span>Build Project</span></a></h2><p>Prerequisite: Java 11, Maven 3.6, Docker</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>mvn install</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="manual-integration-testing-without-docker" tabindex="-1"><a class="header-anchor" href="#manual-integration-testing-without-docker"><span>Manual Integration Testing (without Docker)</span></a></h2><p>Prerequisite: Java 11, Maven 3.6, PostgreSQL 11</p><ul><li>Build the entire project from the root directory of the repository<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>mvn install</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li>Install PostgreSQL 11 (localhost:5432)</li><li>Add DB User <em>liquibase_user</em><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">CREATE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> USER</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> liquibase_user</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> WITH</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> LOGIN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> NOSUPERUSER INHERIT CREATEDB CREATEROLE NOREPLICATION</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">PASSWORD</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;fLp6ZSd5QrMAkGZMjxqXjmcWrTfa3Dn8fA57h92Y&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li>Create Databases <em>fhir</em> and <em>bpe</em> with owner <em>liquibase_user</em><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">CREATE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> DATABASE</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> bpe</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> OWNER</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> liquibase_user;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">CREATE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> DATABASE</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> fhir</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> OWNER</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> liquibase_user;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li>Start <em>org.highmed.dsf.fhir.FhirJettyServerHttps</em> from your IDE with execution folder: <em>.../highmed-dsf/dsf-fhir/dsf-fhir-server-jetty</em></li><li>Start <em>org.highmed.dsf.bpe.BpeJettyServerHttps</em> from your IDE with execition folder: <em>.../highmed-dsf/dsf-bpe/dsf-bpe-server-jetty</em></li><li>To access the FHIR endpoint (<a href="https://localhost:8001/fhir/" target="_blank" rel="noopener noreferrer">https://localhost:8001/fhir/</a>...) and BPE rest interface (<a href="https://localhost:8002/bpe/" target="_blank" rel="noopener noreferrer">https://localhost:8002/bpe/</a>...) via WebBrowser install <em>.../highmed-dsf/dsf-tools/dsf-tools-test-data-generator/cert/Webbrowser_Test_User/Webbrowser_Test_User_certificate.p12</em> (Password: <em>password</em>) in your browsers certifiate store. The p12 file includes a client certificate for &quot;Webbrowser Test User&quot; and the &quot;Test CA&quot; certificate. All private-keys and certificates including the Test CA are generated during the maven build and are private to your machine. Make sure to protect the CA private-key at <em>.../highmed-dsf/dsf-tools/dsf-tools-test-data-generator/cert/ca/testca_private-key.pem</em> from third-party access if you have installed the Test CA certificate in your certificate store.</li></ul><h2 id="manual-integration-testing-local-with-docker" tabindex="-1"><a class="header-anchor" href="#manual-integration-testing-local-with-docker"><span>Manual Integration Testing (local with Docker)</span></a></h2><p>Prerequisite: Java 11, Maven 3.6, Docker 18</p><ul><li>Build the entire project from the root directory of this repository<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>mvn install</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li>Build docker images <ul><li>Windows: in the .../dsf-docker-test-setup folder execute<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>docker-build.bat</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li>Unix/Linux: in the .../dsf-docker-test-setup folder execute<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>docker-build.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul></li><li>Start docker containers <ul><li>To start the FHIR server execute in the .../dsf-docker-test-setup/fhir folder<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>dev:</span></span>
<span class="line"><span>docker-compose up</span></span>
<span class="line"><span></span></span>
<span class="line"><span>prod: </span></span>
<span class="line"><span>docker-compose -f docker-compose.yml -f docker-compose.prod.yml up</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>To start the BPE server execute in the .../dsf-docker-test-setup/bpe folder<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>dev:</span></span>
<span class="line"><span>docker-compose up</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>prod: </span></span>
<span class="line"><span>docker-compose -f docker-compose.yml -f docker-compose.prod.yml up</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li>To access the FHIR endpoint (<a href="https://localhost/fhir/" target="_blank" rel="noopener noreferrer">https://localhost/fhir/</a>...) and BPE rest interface (<a href="https://localhost:8443/bpe/" target="_blank" rel="noopener noreferrer">https://localhost:8443/bpe/</a>...) via WebBrowser install <em>.../highmed-dsf/dsf-tools/dsf-tools-test-data-generator/cert/Webbrowser_Test_User/Webbrowser_Test_User_certificate.p12</em> (Password: <em>password</em>) in your browsers certifiate store. The p12 file includes a client certificate for &quot;Webbrowser Test User&quot; and the &quot;Test CA&quot; certificate. All private-keys and certificates including the Test CA are generated during the maven build and are private to your machine. Make sure to protect the CA private-key at <em>.../highmed-dsf/dsf-tools/dsf-tools-test-data-generator/cert/ca/testca_private-key.pem</em> from third-party access if you have installed the Test CA certificate in your certificate store.</li></ul><h3 id="troubleshooting" tabindex="-1"><a class="header-anchor" href="#troubleshooting"><span>Troubleshooting</span></a></h3><ul><li>If you run in docker network troubles, clean up your network using <code>docker network ls -q | xargs docker network rm</code></li><li>In production: if the warning <em>Service &quot;db&quot; is using volume &quot;/var/lib/postgresql/data&quot; from the previous container</em> appears, run the command<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>docker-compose down -v</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>before starting the containers.</li></ul><h2 id="manual-integration-testing-vms-for-docker-registry-3-medics-ttp" tabindex="-1"><a class="header-anchor" href="#manual-integration-testing-vms-for-docker-registry-3-medics-ttp"><span>Manual Integration Testing (VMs for Docker-Registry, 3 MeDICs, TTP)</span></a></h2><ul><li>For hints on setting up 5 Ubuntu VMs with Docker running on a Windows 10 host with Hyper-V and Ansible see <a href="../blob/master/dsf-docker-test-setup-3medic-ttp/test_setup_windows.txt">test_setup_windows.txt</a></li><li>For hints on setting up 5 Ubuntu VMs with Docker running on a MacOS Catalina host with VirtualBox and Ansible see <a href="../blob/master/dsf-docker-test-setup-3medic-ttp/test_setup_macos.txt">test_setup_macos.txt</a></li></ul><h3 id="starting-the-processes" tabindex="-1"><a class="header-anchor" href="#starting-the-processes"><span>Starting the Processes</span></a></h3><p>Each process contains an <em>ExampleStarter</em> which creates FHIR resources and sends them to a designated FHIR-Endpoint in order to start the corresponding process in the Manual Integration Test Setup. The same client certificate can be used as above: <em>.../highmed-dsf/dsf-tools/dsf-tools-test-data-generator/cert/Webbrowser_Test_User/Webbrowser_Test_User_certificate.p12</em> (Password: <em>password</em>).</p><p>The following configuration is needed:</p><ul><li>The path to the client certificate: either the environment-variable <code>DSF_CLIENT_CERTIFICATE_PATH</code> or <code>args[0]</code> has to be set</li><li>The password of the client certificate: either the environment-variable <code>DSF_CLIENT_CERTIFICATE_PASSWORD</code> or <code>args[1]</code> has to be set</li></ul>`,17)]))}const h=i(r,[["render",n],["__file","build.html.vue"]]),c=JSON.parse('{"path":"/oldstable/build/build.html","title":"Build and Test","lang":"en-US","frontmatter":{"title":"Build and Test","icon":"back-stage","gitInclude":[]},"headers":[{"level":2,"title":"Build Project","slug":"build-project","link":"#build-project","children":[]},{"level":2,"title":"Manual Integration Testing (without Docker)","slug":"manual-integration-testing-without-docker","link":"#manual-integration-testing-without-docker","children":[]},{"level":2,"title":"Manual Integration Testing (local with Docker)","slug":"manual-integration-testing-local-with-docker","link":"#manual-integration-testing-local-with-docker","children":[{"level":3,"title":"Troubleshooting","slug":"troubleshooting","link":"#troubleshooting","children":[]}]},{"level":2,"title":"Manual Integration Testing (VMs for Docker-Registry, 3 MeDICs, TTP)","slug":"manual-integration-testing-vms-for-docker-registry-3-medics-ttp","link":"#manual-integration-testing-vms-for-docker-registry-3-medics-ttp","children":[{"level":3,"title":"Starting the Processes","slug":"starting-the-processes","link":"#starting-the-processes","children":[]}]}],"readingTime":{"minutes":2.1,"words":630},"filePathRelative":"oldstable/build/build.md","excerpt":"<h2>Build Project</h2>\\n<p>Prerequisite: Java 11, Maven 3.6, Docker</p>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>mvn install</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>"}');export{h as comp,c as data};
