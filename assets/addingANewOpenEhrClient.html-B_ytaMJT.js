import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a as r,o}from"./app-CJIENTLq.js";const i={};function a(h,e){return o(),t("div",null,e[0]||(e[0]=[r('<p>The openEHR client that will be used by the Business Process Engine (BPE) is determined by the property <code>org.highmed.dsf.bpe.openehr.webservice.factory.class</code> and loaded using a service loader, which searches for a class of type <a href="https://github.com/highmed/highmed-dsf/blob/master/dsf-openehr/dsf-openehr-client/src/main/java/org/highmed/openehr/client/OpenEhrClientFactory.java" target="_blank" rel="noopener noreferrer"><code>OpenEhrClientFactory</code></a> on startup of the BPE.</p><p>The framework currently includes an openEHR Jersey REST client using basic authentication. To use it, add the jar of the <code>dsf-openehr-client-impl</code> module to the <code>plugin</code> configuration folder and set the property value to <code>org.highmed.openehr.client.impl.OpenEhrClientJerseyFactory</code>.</p><p>To implement a new openEHR client, the following has to be taken into account:</p><ul><li>The plugin needs to supply an openEHR client factory implementing the interface <a href="https://github.com/highmed/highmed-dsf/blob/master/dsf-openehr/dsf-openehr-client/src/main/java/org/highmed/openehr/client/OpenEhrClientFactory.java" target="_blank" rel="noopener noreferrer"><code>OpenEhrClientFactory</code></a> from the <a href="https://github.com/highmed/highmed-dsf/tree/master/dsf-openehr/dsf-openehr-client" target="_blank" rel="noopener noreferrer"><code>dsf-openehr-client</code></a> module.</li><li>The resources folder must contain a file with the name <code>META-INF/services/org.highmed.openehr.client.OpenEhrClientFactory</code> containing the name of the new openehr client factory including the full package name.</li><li>The client needs to implement the interface <a href="https://github.com/highmed/highmed-dsf/blob/master/dsf-openehr/dsf-openehr-client/src/main/java/org/highmed/openehr/client/OpenEhrClient.java" target="_blank" rel="noopener noreferrer"><code>OpenEhrClient</code></a>. The interface defines a method executing an openEHR query returning an instance of an openEHR <a href="https://github.com/highmed/highmed-dsf/blob/master/dsf-openehr/dsf-openehr-model/src/main/java/org/highmed/openehr/model/structure/ResultSet.java" target="_blank" rel="noopener noreferrer"><code>ResultSet</code></a>.</li></ul><p>An example of an openEHR client implementation can be found in the <a href="https://github.com/highmed/highmed-dsf/tree/master/dsf-openehr/dsf-openehr-client-impl" target="_blank" rel="noopener noreferrer"><code>dsf-openehr-client-impl</code></a> module.</p>',5)]))}const c=n(i,[["render",a],["__file","addingANewOpenEhrClient.html.vue"]]),s=JSON.parse('{"path":"/oldstable/code/addingANewOpenEhrClient.html","title":"Adding openEHR Clients","lang":"en-US","frontmatter":{"title":"Adding openEHR Clients","icon":"code","gitInclude":[]},"headers":[],"readingTime":{"minutes":0.74,"words":221},"filePathRelative":"oldstable/code/addingANewOpenEhrClient.md","excerpt":"<p>The openEHR client that will be used by the Business Process Engine (BPE) is determined by the property <code>org.highmed.dsf.bpe.openehr.webservice.factory.class</code> and loaded using a service loader, which searches for a class of type <a href=\\"https://github.com/highmed/highmed-dsf/blob/master/dsf-openehr/dsf-openehr-client/src/main/java/org/highmed/openehr/client/OpenEhrClientFactory.java\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>OpenEhrClientFactory</code></a> on startup of the BPE.</p>"}');export{c as comp,s as data};
