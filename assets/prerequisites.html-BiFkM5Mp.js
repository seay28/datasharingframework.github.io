import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a as l,b as o,d as s,e as a,f as n,r as d,o as h}from"./app-CJIENTLq.js";const p={};function c(k,e){const i=d("RouteLink");return h(),r("div",null,[e[12]||(e[12]=l(`<p>In order to be able to solve the exercises described in this tutorial a software development environment with git, Java 11, Maven 3.8, Docker, docker-compose, a Java IDE like Eclipse or IntelliJ, a BPMN Editor like the Camunda Modeler a and minimum 16GB of RAM is needed.</p><h3 id="git" tabindex="-1"><a class="header-anchor" href="#git"><span>git</span></a></h3><hr><p><a href="https://git-scm.com/" target="_blank" rel="noopener noreferrer">git</a> is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.</p><ul><li>An installation guide for Linux, Mac and Windows can be found here: <a href="https://git-scm.com/book/en/v2/Getting-Started-Installing-Git" target="_blank" rel="noopener noreferrer">installation guide</a></li><li>The most basic git CLI commands are described here: <a href="https://git-scm.com/book/en/v2/Git-Basics-Getting-a-Git-Repository" target="_blank" rel="noopener noreferrer">commands</a></li></ul><h3 id="java-11" tabindex="-1"><a class="header-anchor" href="#java-11"><span>Java 11</span></a></h3><hr><p>Processes for the DSF are written using the <a href="https://www.java.com/de/" target="_blank" rel="noopener noreferrer">Java</a> programming language in version 11. Various open source releases of the Java Developer Kit (JDK) 11 exist, you are free in your choice.</p><h3 id="maven-3-8" tabindex="-1"><a class="header-anchor" href="#maven-3-8"><span>Maven 3.8</span></a></h3><hr><p>When implementing DSF processes, we use Maven 3.8 to manage the software project&#39;s build, reporting and documentation workflow.</p><ul><li>An installation guide for Maven 3.8 can be found here: <a href="https://maven.apache.org/install.html" target="_blank" rel="noopener noreferrer">installation guide</a></li><li>The most important maven commands are described here: <a href="https://maven.apache.org/guides/getting-started/maven-in-five-minutes.html" target="_blank" rel="noopener noreferrer">commands</a></li></ul><h3 id="github-packages" tabindex="-1"><a class="header-anchor" href="#github-packages"><span>GitHub Packages</span></a></h3><p>In order to download DSF packages from the GitHub Package Registry using Maven you need a personal GitHub access token with scope <code class="read:packages">read:packages</code>. This <a href="https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token" target="_blank" rel="noopener noreferrer">GitHub documentation</a> shows you how to generate one.</p><p>After that, add the following <code class="server">server</code> configuration to your local <code class="m2/settings.xml">.m2/settings.xml</code>. Replace <code class="USERNAME">USERNAME</code> with your GitHub username and <code class="TOKEN">TOKEN</code> with the previously generated personal GitHub access token. The token needs at least the <code class="read:packages">read:packages</code> scope.</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">settings</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> xmlns</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://maven.apache.org/SETTINGS/1.0.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  xmlns:xsi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  xsi:schemaLocation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://maven.apache.org/SETTINGS/1.0.0</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                      http://maven.apache.org/xsd/settings-1.0.0.xsd&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">servers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;github&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">username</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;USERNAME&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">username</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">password</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;TOKEN&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">password</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">servers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">settings</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="docker-and-docker-compose" tabindex="-1"><a class="header-anchor" href="#docker-and-docker-compose"><span>Docker and docker-compose</span></a></h3><hr><p>To be able to test the implemented processes, we use a test-setup based on Docker and docker-compose. This allows us to simulate multiple organizations with different roles and run the processes across &quot;organizational boundaries&quot;.</p><ul><li>An installation guide for Docker and docker-compose can be found here: <a href="https://docs.docker.com/get-docker/" target="_blank" rel="noopener noreferrer">installation guide</a></li><li>The most important Docker commands are described here: <a href="https://docs.docker.com/engine/reference/run/" target="_blank" rel="noopener noreferrer">Docker commands</a></li><li>An overview of docker-compose commands are described here: <a href="https://docs.docker.com/compose/reference/" target="_blank" rel="noopener noreferrer">docker-compose commands</a></li></ul><h4 id="host-entries-for-test-setup" tabindex="-1"><a class="header-anchor" href="#host-entries-for-test-setup"><span>Host entries for test-setup</span></a></h4><p>The following entries are required in the <code>hosts</code> file of your computer so that the FHIR servers of the simulated organizations can be accessed in your web browser. On Linux and Mac this file is located at <code>/etc/hosts</code>. On Windows you can find it at <code>C:\\Windows\\System32\\drivers\\etc\\hosts</code></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>127.0.0.1	dic</span></span>
<span class="line"><span>127.0.0.1	cos</span></span>
<span class="line"><span>127.0.0.1	hrp</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="java-ide" tabindex="-1"><a class="header-anchor" href="#java-ide"><span>Java IDE</span></a></h3><hr><p>For the development of the processes we recommend the use of an IDE, e.g. Eclipse or IntelliJ:</p><ul><li>An installation guide for Eclipse can be found here: <a href="https://wiki.eclipse.org/Eclipse/Installation" target="_blank" rel="noopener noreferrer">Eclipse installation guide</a></li><li>An installation guide for IntelliJ can be found here: <a href="https://www.jetbrains.com/help/idea/installation-guide.html" target="_blank" rel="noopener noreferrer">IntelliJ installation guide</a></li></ul><h3 id="bpmn-editor" tabindex="-1"><a class="header-anchor" href="#bpmn-editor"><span>BPMN Editor</span></a></h3><hr><p>To simplify modeling of BPMN processes, we recommend a graphical editor, e.g. the Camunda Modeler:</p><ul><li>An installation guide for the Camunda Modeler can be found here: <a href="https://camunda.com/de/download/modeler/" target="_blank" rel="noopener noreferrer">installation guide</a></li></ul><h3 id="hardware" tabindex="-1"><a class="header-anchor" href="#hardware"><span>Hardware</span></a></h3><hr><p>The minimum hardware requirements to run all simulated organizations as part of the Docker test-setup is 16 GB of RAM.</p><hr>`,35)),o("p",null,[e[6]||(e[6]=s("Prerequisites | ")),a(i,{to:"/oldstable/tutorial/exercise1-simpleProcess.html"},{default:n(()=>e[0]||(e[0]=[s("Exercise 1")])),_:1}),e[7]||(e[7]=s(" | ")),a(i,{to:"/oldstable/tutorial/exercise11-processDebugging.html"},{default:n(()=>e[1]||(e[1]=[s("Exercise 1.1")])),_:1}),e[8]||(e[8]=s(" | ")),a(i,{to:"/oldstable/tutorial/exercise2-inputParameters.html"},{default:n(()=>e[2]||(e[2]=[s("Exercise 2")])),_:1}),e[9]||(e[9]=s(" | ")),a(i,{to:"/oldstable/tutorial/exercise3-messageEvents.html"},{default:n(()=>e[3]||(e[3]=[s("Exercise 3")])),_:1}),e[10]||(e[10]=s(" | ")),a(i,{to:"/oldstable/tutorial/exercise4-exclusiveGateways.html"},{default:n(()=>e[4]||(e[4]=[s("Exercise 4")])),_:1}),e[11]||(e[11]=s(" | ")),a(i,{to:"/oldstable/tutorial/exercise5-eventBasedGateways.html"},{default:n(()=>e[5]||(e[5]=[s("Exercise 5")])),_:1})])])}const m=t(p,[["render",c],["__file","prerequisites.html.vue"]]),v=JSON.parse('{"path":"/oldstable/tutorial/prerequisites.html","title":"Prerequisites","lang":"en-US","frontmatter":{"title":"Prerequisites","icon":"slides","gitInclude":[]},"headers":[{"level":3,"title":"git","slug":"git","link":"#git","children":[]},{"level":3,"title":"Java 11","slug":"java-11","link":"#java-11","children":[]},{"level":3,"title":"Maven 3.8","slug":"maven-3-8","link":"#maven-3-8","children":[]},{"level":3,"title":"GitHub Packages","slug":"github-packages","link":"#github-packages","children":[]},{"level":3,"title":"Docker and docker-compose","slug":"docker-and-docker-compose","link":"#docker-and-docker-compose","children":[]},{"level":3,"title":"Java IDE","slug":"java-ide","link":"#java-ide","children":[]},{"level":3,"title":"BPMN Editor","slug":"bpmn-editor","link":"#bpmn-editor","children":[]},{"level":3,"title":"Hardware","slug":"hardware","link":"#hardware","children":[]}],"readingTime":{"minutes":2.01,"words":603},"filePathRelative":"oldstable/tutorial/prerequisites.md","excerpt":"<p>In order to be able to solve the exercises described in this tutorial a software development environment with git, Java 11, Maven 3.8, Docker, docker-compose, a Java IDE like Eclipse or IntelliJ, a BPMN Editor like the Camunda Modeler a and minimum 16GB of RAM is needed.</p>\\n<h3>git</h3>\\n<hr>\\n<p><a href=\\"https://git-scm.com/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">git</a> is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.</p>"}');export{m as comp,v as data};
