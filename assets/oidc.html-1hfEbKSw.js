import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a as s,b as e,d as a,e as l,f as o,r as h,o as d}from"./app-CJIENTLq.js";const c={},p={class:"hint-container tip"};function k(u,i){const n=h("RouteLink");return d(),r("div",null,[i[6]||(i[6]=s('<h2 id="overview" tabindex="-1"><a class="header-anchor" href="#overview"><span>Overview</span></a></h2><p>Access to the DSF FHIR server REST API and user interface can be configured via <a href="access-control">access control roles</a>. By default users are only authenticated using X.509 client certificates, but authentication for local users via OAuth 2.0 OpenID Connect can also be enabled.</p><p>The DSF FHIR server supports <a href="https://openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth" target="_blank" rel="noopener noreferrer">Authorization Code Flow</a> for the user interface as well as <a href="https://datatracker.ietf.org/doc/html/rfc6750" target="_blank" rel="noopener noreferrer">Bearer Token Authentication</a> for the REST API. <a href="https://openid.net/specs/openid-connect-backchannel-1_0.html" target="_blank" rel="noopener noreferrer">Back-Channel Logout</a> is also supported.</p>',3)),e("div",p,[i[5]||(i[5]=e("p",{class:"hint-container-title"},"FHIR Reverse Proxy",-1)),e("p",null,[i[1]||(i[1]=a("The DSF FHIR reverse proxy requires client certificates by default. To use OpenID Connect authentication the configuration parameter ")),l(n,{to:"/v1.5.2/maintain/fhir/configuration/reverseproxy.html#ssl-verify-client"},{default:o(()=>i[0]||(i[0]=[a("SSL_VERIFY_CLIENT")])),_:1}),i[2]||(i[2]=a(" needs to be set to ")),i[3]||(i[3]=e("code",null,"optional",-1)),i[4]||(i[4]=a("."))])]),i[7]||(i[7]=s(`<h2 id="authorization-code-flow" tabindex="-1"><a class="header-anchor" href="#authorization-code-flow"><span>Authorization Code Flow</span></a></h2><p>To enable authentication via OpenID Connect authorization code flow, set the configuration parameter <a href="configuration#dev-dsf-server-auth-oidc-authorization-code-flow">DEV_DSF_SERVER_AUTH_OIDC_AUTHORIZATION_CODE_FLOW</a> to <code>true</code> and specify the following parameters:</p><ul><li><a href="configuration#dev-dsf-server-auth-oidc-provider-realm-base-url">DEV_DSF_SERVER_AUTH_OIDC_PROVIDER_REALM_BASE_URL</a></li><li><a href="configuration#dev-dsf-server-auth-oidc-client-id">DEV_DSF_SERVER_AUTH_OIDC_CLIENT_ID</a></li><li><a href="configuration#dev-dsf-server-auth-oidc-client-secret">DEV_DSF_SERVER_AUTH_OIDC_CLIENT_SECRET</a></li></ul><p>Optionally, back channel logout can be enabled by setting <a href="configuration#dev-dsf-server-auth-oidc-back-channel-logout">DEV_DSF_SERVER_AUTH_OIDC_BACK_CHANNEL_LOGOUT</a> to <code>true</code>. The DSF FHIR server accepts logout tokens at <a href="configuration#dev-dsf-fhir-server-base-url">DEV_DSF_FHIR_SERVER_BASE_URL</a> + <code>/back-channel-logout</code>. The path can be modified via <a href="configuration#dev-dsf-server-auth-oidc-back-channel-logout-path">DEV_DSF_SERVER_AUTH_OIDC_BACK_CHANNEL_LOGOUT_PATH</a>.</p><h2 id="bearer-token-authentication" tabindex="-1"><a class="header-anchor" href="#bearer-token-authentication"><span>Bearer Token Authentication</span></a></h2><p>To enable bearer token authentication, set the configuration parameter <a href="configuration#dev-dsf-server-auth-oidc-bearer-token">DEV_DSF_SERVER_AUTH_OIDC_BEARER_TOKEN</a> to <code>true</code> and specify the following parameter:</p><ul><li><a href="configuration#dev-dsf-server-auth-oidc-provider-realm-base-url">DEV_DSF_SERVER_AUTH_OIDC_PROVIDER_REALM_BASE_URL</a></li></ul><h2 id="additional-odic-configuration-parameter" tabindex="-1"><a class="header-anchor" href="#additional-odic-configuration-parameter"><span>Additional ODIC Configuration Parameter</span></a></h2><p>A number of additional <code>DEV_DSF_SERVER_AUTH_OIDC ...</code> configuration parameter are specify on the DSF FHIR server <a href="configuration">configuration parameter page</a>.</p><p>For example the configuration parameter <a href="configuration#dev-dsf-server-auth-oidc-provider-client-trust-server-certificate-cas">DEV_DSF_SERVER_AUTH_OIDC_PROVIDER_CLIENT_TRUST_SERVER_CERTIFICATE_CAS</a> can be used to specify a PEM encoded file with trusted root certificates to be used when accessing the OpenID Connect provider. If not specify the JVM default trusted root certificates are used for this connection.</p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">services</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ghcr.io/datasharingframework/fhir:1.5.2</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # ...</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    secrets</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">keycloak_root_ca.pem</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # ...</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    environment</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # ...</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      DEV_DSF_SERVER_AUTH_OIDC_AUTHORIZATION_CODE_FLOW</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;true&#39;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      DEV_DSF_SERVER_AUTH_OIDC_BACK_CHANNEL_LOGOUT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;true&#39;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      DEV_DSF_SERVER_AUTH_OIDC_BEARER_TOKEN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;true&#39;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      DEV_DSF_SERVER_AUTH_OIDC_PROVIDER_REALM_BASE_URL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">https://keycloak.test.org/realms/dsf</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      DEV_DSF_SERVER_AUTH_OIDC_PROVIDER_CLIENT_TRUST_SERVER_CERTIFICATE_CAS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/run/secrets/keycloak_root_ca.pem</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      DEV_DSF_SERVER_AUTH_OIDC_CLIENT_ID</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">dsf-fhir</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      DEV_DSF_SERVER_AUTH_OIDC_CLIENT_SECRET</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">n9bCMtjugv3Y_.szktXyQ2RH5se+J%o3</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # ...</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">secrets</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  keycloak_root_ca.pem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">./secrets/keycloak_root_ca.pem</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12))])}const f=t(c,[["render",k],["__file","oidc.html.vue"]]),A=JSON.parse('{"path":"/v1.5.2/maintain/fhir/oidc.html","title":"OpenID Connect","lang":"en-US","frontmatter":{"title":"OpenID Connect","icon":"config","gitInclude":[]},"headers":[{"level":2,"title":"Overview","slug":"overview","link":"#overview","children":[]},{"level":2,"title":"Authorization Code Flow","slug":"authorization-code-flow","link":"#authorization-code-flow","children":[]},{"level":2,"title":"Bearer Token Authentication","slug":"bearer-token-authentication","link":"#bearer-token-authentication","children":[]},{"level":2,"title":"Additional ODIC Configuration Parameter","slug":"additional-odic-configuration-parameter","link":"#additional-odic-configuration-parameter","children":[]},{"level":2,"title":"Example","slug":"example","link":"#example","children":[]}],"readingTime":{"minutes":1.34,"words":401},"filePathRelative":"v1.5.2/maintain/fhir/oidc.md","excerpt":"<h2>Overview</h2>\\n<p>Access to the DSF FHIR server REST API and user interface can be configured via <a href=\\"access-control\\">access control roles</a>. By default users are only authenticated using X.509 client certificates, but authentication for local users via OAuth 2.0 OpenID Connect can also be enabled.</p>"}');export{f as comp,A as data};
